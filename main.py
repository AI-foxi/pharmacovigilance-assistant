# main.py
import os
from modules.seriousness_checker import SeriousnessChecker
from modules.ime_checker import IMEChecker
from modules.expectedness_checker import ExpectednessChecker
from modules.causality_checker import CausalityChecker
from modules.missing_info_checker import MissingInfoChecker

def extract_adverse_events(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø–æ–∏—Å–∫–æ–º"""
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
    common_events = [
        # –ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ
        '–∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞', '–∏—à–µ–º–∏—è –º–∏–æ–∫–∞—Ä–¥–∞', '–ø–µ—Ä–∏–∫–∞—Ä–¥–∏–∞–ª—å–Ω—ã–π –≤—ã–ø–æ—Ç', 
        '—Ç—Ä–æ–º–±–æ–∑ –∫–æ—Ä–æ–Ω–∞—Ä–Ω—ã—Ö –∞—Ä—Ç–µ—Ä–∏–π', '–∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π —Ç—Ä–æ–º–±–æ–∑', '—Ç—Ä–æ–º–±–æ—ç–º–±–æ–ª–∏—è',
        '–∞—Ç—Ä–∏–æ–≤–µ–Ω—Ç—Ä–∏–∫—É–ª—è—Ä–Ω–∞—è –±–ª–æ–∫–∞–¥–∞', '–∂–µ–ª—É–¥–æ—á–∫–æ–≤—ã–µ —ç–∫—Å—Ç—Ä–∞—Å–∏—Å—Ç–æ–ª—ã', '—Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ',
        '—É–¥–ª–∏–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ qt', '–∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è', '—Ö—Å–Ω',
        '—Å—É–ø—Ä–∞–≤–µ–Ω—Ç—Ä–∏–∫—É–ª—è—Ä–Ω–∞—è —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏—è', '–≤–µ–Ω–æ–∑–Ω–∞—è —Ç—Ä–æ–º–±–æ—ç–º–±–æ–ª–∏—è',
        '–∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è —Ç—Ä–æ–º–±–æ—ç–º–±–æ–ª–∏—è', '—Ç—Ä–æ–º–±–æ–∑ –≥–ª—É–±–æ–∫–∏—Ö –≤–µ–Ω', '—Ç—ç–ª–∞',
        
        # –ù–µ–≤—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ
        '–ø—Å–∏—Ö–æ—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', '–≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–∏', '–≥–∏–ø–µ—Å—Ç–µ–∑–∏—è', '—Ç—Ä–µ–º–æ—Ä',
        '–ª–µ—Ç–∞—Ä–≥–∏—è', '–ø–µ—Ä–∏—Ñ–µ—Ä–∏—á–µ—Å–∫–∞—è –Ω–µ–π—Ä–æ–ø–∞—Ç–∏—è', '–≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ', '–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å',
        '—Å–æ–Ω–ª–∏–≤–æ—Å—Ç—å', '–∑–∞—Ç–æ—Ä–º–æ–∂–µ–Ω–Ω–æ—Å—Ç—å', '–∏–Ω—Å—É–ª—å—Ç', '—Å–∏–Ω–∫–æ–ø–µ', 
        '–≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–≤–Ω–∞—è —ç–Ω—Ü–µ—Ñ–∞–ª–æ–ø–∞—Ç–∏—è',
        
        # –û–±—â–∏–µ —Å–µ—Ä—å–µ–∑–Ω—ã–µ
        '—Å–º–µ—Ä—Ç—å', '–ª–µ—Ç–∞–ª—å–Ω—ã–π', '–ø–æ–≥–∏–±', '—É–º–µ—Ä', '–≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', 
        '—Ä–µ–∞–Ω–∏–º–∞—Ü–∏—è', '—É–≥—Ä–æ–∑–∞ –∂–∏–∑–Ω–∏'
    ]
    
    found_events = []
    text_lower = text.lower()
    
    for event in common_events:
        if event in text_lower:
            found_events.append(event)
    
    return found_events if found_events else ['–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ']

def main():
    print("üöÄ –§–ê–†–ú–ê–ö–û–ù–ê–î–ó–û–†–ù–´–ô –ê–°–°–ò–°–¢–ï–ù–¢ v5.0 - –ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–µ—Ä—è–ª—å—â–∏–∫–∏
    seriousness_checker = SeriousnessChecker()
    ime_checker = IMEChecker()
    expectedness_checker = ExpectednessChecker()
    causality_checker = CausalityChecker()
    missing_info_checker = MissingInfoChecker()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã
    available_drugs = expectedness_checker.get_available_drugs()
    print(f"üíä –ü—Ä–µ–ø–∞—Ä–∞—Ç—ã –≤ –±–∞–∑–µ: {', '.join(available_drugs)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ 6 –∫–µ–π—Å–æ–≤
    for i in range(1, 7):
        filename = f"data/cases/case_{i}.txt"
        
        if os.path.exists(filename):
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            with open(filename, 'r', encoding='utf-8') as f:
                case_text = f.read().strip()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è
            adverse_events = extract_adverse_events(case_text)
            
            # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print(f"\n{'='*70}")
            print(f"üìã –ö–ï–ô–° {i}:")
            print(f"üìÑ –¢–µ–∫—Å—Ç: {case_text}")
            print(f"üîç –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è: {', '.join(adverse_events)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            missing_info_result = missing_info_checker.check_missing_information(case_text, adverse_events[0] if adverse_events else '')
            print(f"üìä –ü–æ–ª–Ω–æ—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {missing_info_result['completeness_score']}%")
            
            if missing_info_result['missing_info']:
                print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
                for question in missing_info_result['questions']:
                    print(f"   - {question}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ
            for event in adverse_events:
                print(f"\n   üìç –ê–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏—è: '{event.upper()}'")
                
                # –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å
                seriousness_result = seriousness_checker.check_seriousness(case_text)
                seriousness_status = "üî¥ –°–ï–†–¨–ï–ó–ù–´–ô" if seriousness_result['is_serious'] else "üü¢ –ù–ï —Å–µ—Ä—å–µ–∑–Ω—ã–π"
                print(f"   ‚ö†Ô∏è  –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å: {seriousness_status}")
                if seriousness_result['flags']:
                    print(f"      –ü—Ä–∏—á–∏–Ω—ã: {', '.join(seriousness_result['flags'])}")
                
                # IME –∑–Ω–∞—á–∏–º–æ—Å—Ç—å
                ime_result = ime_checker.check_ime_significance(event)
                ime_status = "üî¥ –ó–ù–ê–ß–ò–ú–´–ô" if ime_result['is_significant'] else "üü¢ –ù–ï –∑–Ω–∞—á–∏–º—ã–π"
                print(f"   üè• IME –∑–Ω–∞—á–∏–º–æ—Å—Ç—å: {ime_status}")
                if ime_result['found_terms']:
                    for term in ime_result['found_terms']:
                        print(f"      –ù–∞–π–¥–µ–Ω IME: '{term['russian']}' ‚Üí {term['english']}")
                
                # –ü—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ—Å—Ç—å
                expectedness_result = expectedness_checker.check_expectedness(case_text, event)
                expectedness_status = "üü¢ –ü–†–ï–î–í–ò–î–ï–ù–ù–´–ô" if expectedness_result['is_expected'] else "üî¥ –ù–ï–ü–†–ï–î–í–ò–î–ï–ù–ù–´–ô"
                print(f"   üìã –ü—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ—Å—Ç—å: {expectedness_status}")
                print(f"      –ü—Ä–µ–ø–∞—Ä–∞—Ç: {expectedness_result['drug']}")
                print(f"      –ü—Ä–∏—á–∏–Ω–∞: {expectedness_result['reason']}")
                if 'frequency' in expectedness_result:
                    print(f"      –ß–∞—Å—Ç–æ—Ç–∞: {expectedness_result['frequency']}")
                
                # –ü—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–≤—è–∑—å
                causality_result = causality_checker.analyze_causality(case_text, event)
                print(f"   üîó –ü—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç—å: {causality_result['level']}")
                print(f"      –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: {causality_result['reasoning']}")
                    
        else:
            print(f"\n‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
    print(f"\n{'='*70}")
    print("üéâ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù! –í—Å–µ 5 –º–æ–¥—É–ª–µ–π —Ä–∞–±–æ—Ç–∞—é—Ç!")
    print("üìà –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–∞—è: –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å, IME, –ü—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ—Å—Ç—å, –ü—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç—å, –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main()
